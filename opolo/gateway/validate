[
  {
    "activity_id": "OPOLO_EVENT_06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "activity_name": "Event_Monitoring_Fulfilement_Offer",
    "activity_key": "a3221d14-bf76-6f04-0f12-b3c98486b1e4",
    "journey_id": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "journey_version": "4",
    "journey_name": "test all activities - girish",
    "journey_status": "activate",
    "last_upd_dt_time": "2020-02-03 09:25:26.243Z",
    "journey_key": "a3221d14-bf76-6f04-0f12-b3c98486b1e4",
    "originalDefinitionId": "4e766a11-90bc-4328-9a03-2a25e02b7123",
    "activity_data": {
      "name": "Event_Monitoring_Fulfilement_Offer",
      "activity_type": "OPOLO_EVENT",
      "description": "Event_Monitoring_Fulfilement_Offer",
      "startDate": "2020-01-08",
      "endDate": "2020-01-22",
      "expression_type": "Bricks Editor",
      "eventLogic": [],
      "polyCoordinates": [],
      "payloads": [
        {
          "id": "ACCOUNT_STARTDATE_LifeTime",
          "description": "ACCOUNT_STARTDATE_LifeTime",
          "serviceType": "NameValue",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "long",
          "expression": "if ( RECORD_TYPE.equals(\"MER\") && \",5002,5003,\".contains(EVENT_TYPE) ){\r\n\treturn RECORD_DAYSTAMP;\r\n}\r\nelse if ( ACCOUNT_STARTDATE_LifeTime == 0 && RECORD_TYPE.equals(\"CREDIT\") && (EVENT_TYPE.equals(\"3402\") || USAGE_SERVICE_TYPE.equals(\"Activation_Topup\")) ){\r\n        return RECORD_DAYSTAMP;\r\n}\r\nelse if ( ACCOUNT_STARTDATE_LifeTime == 0 && RECORD_TYPE.equals(\"BATCH_TRIGGER\") ){\r\n        return ACCOUNT_START_DATE;\r\n}\r\nreturn ACCOUNT_STARTDATE_LifeTime;",
          "status": "Active",
          "creationDate": "1556593114186",
          "lastUpateDate": "1566277362516",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Account_start_date",
          "indicatorType": "Indicator",
          "parameters": "[\"RECORD_TYPE\",\"EVENT_TYPE\",\"RECORD_DAYSTAMP\",\"ACCOUNT_STARTDATE_LifeTime\",\"USAGE_SERVICE_TYPE\",\"ACCOUNT_START_DATE\"]",
          "brickTerm": "Account start date",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "ACCOUNT_STARTDATE_LifeTime"
        },
        {
          "id": "ACCOUNT_TYPE_LifeTime",
          "description": "Payment Account Type",
          "serviceType": "NameValue",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "java.lang.String",
          "expression": "\"PREPAID\"",
          "status": "Active",
          "creationDate": "1556529235430",
          "lastUpateDate": "1566277459577",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Payment_account_type",
          "indicatorType": "Indicator",
          "parameters": "[]",
          "brickTerm": "Payment Account Type",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "ACCOUNT_TYPE_LifeTime"
        },
        {
          "id": "AGE_ON_NETWORK_LifeTime",
          "description": "Tenure",
          "serviceType": "NameValue",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "double",
          "expression": "if( ACCOUNT_STARTDATE_LifeTime >0  ){\r\nlong currentTime = new java.util.Date().getTime();\r\n   currentTime += java.util.TimeZone.getDefault().getOffset( currentTime );\r\n \r\n   long tempAge = ( currentTime - ACCOUNT_STARTDATE_LifeTime ) / 86400000 ;\r\n   if(  tempAge >= 0  )\r\n         return tempAge;\r\nreturn -1;\r\n}\r\nreturn -1;",
          "status": "Active",
          "creationDate": "1556593166511",
          "lastUpateDate": "1566277527870",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Tenure",
          "indicatorType": "Indicator",
          "parameters": "[\"ACCOUNT_STARTDATE_LifeTime\"]",
          "brickTerm": "Tenure",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "AGE_ON_NETWORK_LifeTime"
        },
        {
          "id": "BILLING_PRODUCT_LifeTime",
          "description": "BILLING_PRODUCT_LifeTime",
          "serviceType": "VOICE",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "Session",
          "expressionType": "java.lang.String",
          "expression": "JsonElement eCurrentCommercialOffer = COMMERCIAL_OFFER_LifeTime.get(\"currentCommercialOffer\");\r\n    if( eCurrentCommercialOffer != null )\r\n    {\r\n        return eCurrentCommercialOffer.getAsString();\r\n    }\r\nreturn BILLING_PRODUCT_LifeTime;",
          "status": "InActive",
          "creationDate": "1558418647315",
          "lastUpateDate": "1566276861937",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": null,
          "indicatorType": "Indicator",
          "parameters": "[\"COMMERCIAL_OFFER_LifeTime\",\"BILLING_PRODUCT_LifeTime\"]",
          "brickTerm": "Billing account ID of the customer",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "BILLING_PRODUCT_LifeTime"
        },
        {
          "id": "BALANCE_EXPIRY_DATE",
          "description": "Balance expiry date",
          "serviceType": "CREDIT",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "Session",
          "expressionType": "java.lang.String",
          "expression": "java.util.Calendar c = java.util.Calendar.getInstance();\r\n    java.util.Date balanceExpiryDate = new java.util.Date(CREDIT_EXPIRY_DATE_LifeTime);\r\n    c.setTime(balanceExpiryDate);\r\n    java.text.DateFormat format=new java.text.SimpleDateFormat(\"MM/DD/YYYY HH:MM:SS\");\r\n    format.setTimeZone(java.util.TimeZone.getTimeZone(\"GMT\"));\r\n    return (format.format(balanceExpiryDate));",
          "status": "Active",
          "creationDate": "1557984082728",
          "lastUpateDate": "1571275157522",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": null,
          "indicatorType": "Indicator",
          "parameters": "[\"CREDIT_EXPIRY_DATE_LifeTime\"]",
          "brickTerm": "Balance expiry date",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "BALANCE_EXPIRY_DATE"
        },
        {
          "id": "CHANNEL_OF_PREFERENCE",
          "description": "Channel of preference",
          "serviceType": "PROFILE",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "Session",
          "expressionType": "java.lang.String",
          "expression": "CHANNEL_OF_PREFERENCE = PREFERRED_CHANNEL_LifeTime",
          "status": "Active",
          "creationDate": "1558072101240",
          "lastUpateDate": "1565681285366",
          "owner": "deepti",
          "scriptOrExpression": "expression",
          "alternateNames": "Channel_of_preference",
          "indicatorType": "Indicator",
          "parameters": "[\"CHANNEL_OF_PREFERENCE\",\"PREFERRED_CHANNEL_LifeTime\"]",
          "brickTerm": "Channel of preference",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "CHANNEL_OF_PREFERENCE"
        },
        {
          "id": "CONTRACT_EXPIRY_DATE",
          "description": "Contract expiry date",
          "serviceType": "PROFILE",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "Session",
          "expressionType": "java.lang.String",
          "expression": "CONTRACT_EXPIRY_DATE = BALANCE_EXPIRY_DATE",
          "status": "Active",
          "creationDate": "1557984949880",
          "lastUpateDate": "1565681321333",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Contract_expiry_date",
          "indicatorType": "Indicator",
          "parameters": "[\"CONTRACT_EXPIRY_DATE\",\"BALANCE_EXPIRY_DATE\"]",
          "brickTerm": "Contract expiry date",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "CONTRACT_EXPIRY_DATE"
        },
        {
          "id": "CREDIT_EXPIRY_DATE_LifeTime",
          "description": "Credit expiry date",
          "serviceType": "NameValue",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "long",
          "expression": "if( CREDIT_SERIES_LifeTime.has(\"latestCreditExpiryDate\")  )\r\n    return CREDIT_SERIES_LifeTime.get(\"latestCreditExpiryDate\").getAsLong();\r\nreturn CREDIT_EXPIRY_DATE_LifeTime;",
          "status": "Active",
          "creationDate": "1557300637802",
          "lastUpateDate": "1566360949631",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "credit_expiry_date",
          "indicatorType": "Indicator",
          "parameters": "[\"CREDIT_SERIES_LifeTime\",\"CREDIT_EXPIRY_DATE_LifeTime\"]",
          "brickTerm": "Credit expiry date",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "CREDIT_EXPIRY_DATE_LifeTime"
        },
        {
          "id": "CREDIT_BALANCE_LifeTime",
          "description": "Latest credit balance",
          "serviceType": "CREDIT",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "Session",
          "expressionType": "double",
          "expression": "JsonElement eLatestBalance = LATEST_BALANCE_LifeTime.get(\"balance\");\r\nif(eLatestBalance != null)\r\n     return getLatestBalance();\r\nreturn -1;",
          "status": "Active",
          "creationDate": "1556592837702",
          "lastUpateDate": "1565681433156",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Latest_credit_balance",
          "indicatorType": "Indicator",
          "parameters": "[\"LATEST_BALANCE_LifeTime\",\"SIFTMATH\"]",
          "brickTerm": "Latest credit balance",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "CREDIT_BALANCE_LifeTime"
        },
        {
          "id": "DOB_LifeTime",
          "description": "Date of birth",
          "serviceType": "NameValue",
          "serviceSubType": "Profile-All",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "java.lang.String",
          "expression": "RECORD_TYPE.equals( \"BATCH_TRIGGER\" ) ? DOB : DOB_LifeTime",
          "status": "Active",
          "creationDate": "1558071572296",
          "lastUpateDate": "1566361018959",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Date_of_birth",
          "indicatorType": "Indicator",
          "parameters": "[\"RECORD_TYPE\",\"DOB\",\"DOB_LifeTime\"]",
          "brickTerm": "Date of birth",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "DOB_LifeTime"
        },
        {
          "id": "DEVICE_MODEL",
          "description": "Device model of the customer",
          "serviceType": "PROFILE",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "Session",
          "expressionType": "java.lang.String",
          "expression": "return \"-99\";",
          "status": "Active",
          "creationDate": "1557984796363",
          "lastUpateDate": "1565682062211",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": null,
          "indicatorType": "Indicator",
          "parameters": "[]",
          "brickTerm": "Device model of the customer",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "DEVICE_MODEL"
        },
        {
          "id": "DAYS_TO_CREDIT_EXPIRY_LifeTime",
          "description": "Days to credit expiry",
          "serviceType": "NameValue",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "double",
          "expression": "JsonElement eCreditExpiryDate = CREDIT_SERIES_LifeTime.get(\"latestCreditExpiryDate\");\r\nif(eCreditExpiryDate != null){\r\ndouble expDayCount = getCreditExpiryDaysCount ();\r\n\r\nif( expDayCount  >=0.0  ){ \r\nreturn expDayCount;\r\n}\r\n}\r\nreturn -1;",
          "status": "Active",
          "creationDate": "1556592060793",
          "lastUpateDate": "1566360985674",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Days_to_credit_expiry",
          "indicatorType": "Indicator",
          "parameters": "[\"CREDIT_SERIES_LifeTime\",\"SIFTMATH\"]",
          "brickTerm": "Days to credit expiry",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "DAYS_TO_CREDIT_EXPIRY_LifeTime"
        },
        {
          "id": "LAST_NTW_CONN_DATE_LifeTime",
          "description": "Last network connection date",
          "serviceType": "NameValue",
          "serviceSubType": "ALL",
          "measurementType": "Value",
          "frequency": "LifeTime",
          "expressionType": "long",
          "expression": "if ( RECORD_TYPE.equals(\"MOB_ACTIVITY\") && RECORD_TIMESTAMP > LAST_NTW_CONN_DATE_LifeTime )\r\n{\r\nreturn RECORD_TIMESTAMP;\r\n}\r\nreturn LAST_NTW_CONN_DATE_LifeTime;",
          "status": "Active",
          "creationDate": "1559007047278",
          "lastUpateDate": "1566361070164",
          "owner": "piyali",
          "scriptOrExpression": "expression",
          "alternateNames": "Last_network_connection_date",
          "indicatorType": "Indicator",
          "parameters": "[\"RECORD_TYPE\",\"RECORD_TIMESTAMP\",\"LAST_NTW_CONN_DATE_LifeTime\"]",
          "brickTerm": "Last network connection date",
          "category": "ALL",
          "criteria": "",
          "audienceLevel": null,
          "field_name": "LAST_NTW_CONN_DATE_LifeTime"
        }
      ],
      "event_type": "Monitoring Event",
      "bricks": {
        "bricksUsed": [
          {
            "bt": "Tenure {NumericOperator} {NumericValue}",
            "jt": "$1 AGE_ON_NETWORK_LifeTime $3 $4 $5 $7",
            "id": 1,
            "siftType": "Indicator"
          },
          {
            "bt": "Payment Account Type {StringOperator} {StringValue}",
            "jt": "$1 ACCOUNT_TYPE_LifeTime.$3( $4 ) $5 $7",
            "id": 2,
            "siftType": "Indicator"
          }
        ],
        "expressionString": "(Tenure  greater than or equal to 10 AND \nPayment Account Type  equals to \"PREPAID\")",
        "expressionType": "bricks",
        "returnType": "boolean"
      }
    },
    "activity_type": "OPOLO_EVENT",
    "next_activity": "REST-3",
    "eventDefinitionKey": "Event-54d1e2ce-138c-0be6-956e-054014acfdee",
    "SIFTInstanceID": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526_4"
  },
  {
    "activity_id": "OPOLO_POLICY_06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "activity_name": "Opolo Policy",
    "activity_key": "REST-3",
    "journey_id": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "journey_version": "4",
    "journey_name": "test all activities - girish",
    "journey_status": "activate",
    "last_upd_dt_time": "2020-02-03 09:25:26.243Z",
    "journey_key": "a3221d14-bf76-6f04-0f12-b3c98486b1e4",
    "originalDefinitionId": "4e766a11-90bc-4328-9a03-2a25e02b7123",
    "activity_data": {
      "name": "Opolo Policy",
      "activity_type": "OPOLO_POLICY",
      "applyContactPolicy": true,
      "logPolicy": "Log As Contact",
      "controlGroup": "none",
      "controlGroupValue": "",
      "communicationCategory": "test"
    },
    "activity_type": "OPOLO_POLICY",
    "next_activity": "REST-2",
    "eventDefinitionKey": "Event-54d1e2ce-138c-0be6-956e-054014acfdee",
    "SIFTInstanceID": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526_4"
  },
  {
    "activity_id": "OPOLO_OFFER_06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "activity_name": "OpoloOffer",
    "activity_key": "REST-2",
    "journey_id": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "journey_version": "4",
    "journey_name": "test all activities - girish",
    "journey_status": "activate",
    "last_upd_dt_time": "2020-02-03 09:25:26.243Z",
    "journey_key": "a3221d14-bf76-6f04-0f12-b3c98486b1e4",
    "originalDefinitionId": "4e766a11-90bc-4328-9a03-2a25e02b7123",
    "activity_data": {
      "name": "OpoloOffer",
      "activity_type": "OPOLO_OFFER",
      "sift_type": "MonitoringOffer",
      "configured_products": [
        {
          "id": 1,
          "product_name": "2GB Free data",
          "description": "2GB Free data ",
          "target_system": "target_system1",
          "parameters": [
            {
              "key": "DATA",
              "value": "2",
              "type": "int",
              "operator_type": "Credit",
              "validity_days": "30",
              "validity_hours": "900"
            }
          ],
          "createdAt": "2020-01-09T05:52:58Z",
          "updatedAt": "2020-01-09T05:52:58Z"
        }
      ],
      "configured_event": {
        "id": 2,
        "event_id": "Event_Fulfilement_Offer",
        "event_name": "Event_Fulfilement_Offer",
        "description": "Event_Fulfilement_Offer",
        "status": "Active",
        "event_type": "Monitoring Event",
        "validity_start_date": "",
        "validity_end_date": "",
        "domain_id": 1,
        "payloads": [
          {
            "id": "ACCOUNT_STARTDATE_LifeTime",
            "description": "ACCOUNT_STARTDATE_LifeTime",
            "serviceType": "NameValue",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "long",
            "expression": "if ( RECORD_TYPE.equals(\"MER\") && \",5002,5003,\".contains(EVENT_TYPE) ){\r\n\treturn RECORD_DAYSTAMP;\r\n}\r\nelse if ( ACCOUNT_STARTDATE_LifeTime == 0 && RECORD_TYPE.equals(\"CREDIT\") && (EVENT_TYPE.equals(\"3402\") || USAGE_SERVICE_TYPE.equals(\"Activation_Topup\")) ){\r\n        return RECORD_DAYSTAMP;\r\n}\r\nelse if ( ACCOUNT_STARTDATE_LifeTime == 0 && RECORD_TYPE.equals(\"BATCH_TRIGGER\") ){\r\n        return ACCOUNT_START_DATE;\r\n}\r\nreturn ACCOUNT_STARTDATE_LifeTime;",
            "status": "Active",
            "creationDate": "1556593114186",
            "lastUpateDate": "1566277362516",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": "Account_start_date",
            "indicatorType": "Indicator",
            "parameters": "[\"RECORD_TYPE\",\"EVENT_TYPE\",\"RECORD_DAYSTAMP\",\"ACCOUNT_STARTDATE_LifeTime\",\"USAGE_SERVICE_TYPE\",\"ACCOUNT_START_DATE\"]",
            "brickTerm": "Account start date",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "ACCOUNT_STARTDATE_LifeTime"
          },
          {
            "id": "ACCOUNT_TYPE_LifeTime",
            "description": "Payment Account Type",
            "serviceType": "NameValue",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "java.lang.String",
            "expression": "\"PREPAID\"",
            "status": "Active",
            "creationDate": "1556529235430",
            "lastUpateDate": "1566277459577",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": "Payment_account_type",
            "indicatorType": "Indicator",
            "parameters": "[]",
            "brickTerm": "Payment Account Type",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "ACCOUNT_TYPE_LifeTime"
          },
          {
            "id": "AGE_ON_NETWORK_LifeTime",
            "description": "Tenure",
            "serviceType": "NameValue",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "double",
            "expression": "if( ACCOUNT_STARTDATE_LifeTime >0  ){\r\nlong currentTime = new java.util.Date().getTime();\r\n   currentTime += java.util.TimeZone.getDefault().getOffset( currentTime );\r\n \r\n   long tempAge = ( currentTime - ACCOUNT_STARTDATE_LifeTime ) / 86400000 ;\r\n   if(  tempAge >= 0  )\r\n         return tempAge;\r\nreturn -1;\r\n}\r\nreturn -1;",
            "status": "Active",
            "creationDate": "1556593166511",
            "lastUpateDate": "1566277527870",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": "Tenure",
            "indicatorType": "Indicator",
            "parameters": "[\"ACCOUNT_STARTDATE_LifeTime\"]",
            "brickTerm": "Tenure",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "AGE_ON_NETWORK_LifeTime"
          },
          {
            "id": "BAID_LifeTime",
            "description": "Billing account Id",
            "serviceType": "NameValue",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "java.lang.String",
            "expression": "if (RECORD_TYPE.equals(\"CREDIT\") ){\r\n        return BA_ID;\r\n}\r\nreturn BAID_LifeTime;",
            "status": "Active",
            "creationDate": "1558431823671",
            "lastUpateDate": "1566360830908",
            "owner": "ajith",
            "scriptOrExpression": "expression",
            "alternateNames": "Billing_account_id",
            "indicatorType": "Indicator",
            "parameters": "[\"RECORD_TYPE\",\"BA_ID\",\"BAID_LifeTime\"]",
            "brickTerm": "Billing account Id",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "BAID_LifeTime"
          },
          {
            "id": "BALANCE_EXPIRY_DATE",
            "description": "Balance expiry date",
            "serviceType": "CREDIT",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "Session",
            "expressionType": "java.lang.String",
            "expression": "java.util.Calendar c = java.util.Calendar.getInstance();\r\n    java.util.Date balanceExpiryDate = new java.util.Date(CREDIT_EXPIRY_DATE_LifeTime);\r\n    c.setTime(balanceExpiryDate);\r\n    java.text.DateFormat format=new java.text.SimpleDateFormat(\"MM/DD/YYYY HH:MM:SS\");\r\n    format.setTimeZone(java.util.TimeZone.getTimeZone(\"GMT\"));\r\n    return (format.format(balanceExpiryDate));",
            "status": "Active",
            "creationDate": "1557984082728",
            "lastUpateDate": "1571275157522",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": null,
            "indicatorType": "Indicator",
            "parameters": "[\"CREDIT_EXPIRY_DATE_LifeTime\"]",
            "brickTerm": "Balance expiry date",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "BALANCE_EXPIRY_DATE"
          },
          {
            "id": "BILLING_PRODUCT_LifeTime",
            "description": "BILLING_PRODUCT_LifeTime",
            "serviceType": "VOICE",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "Session",
            "expressionType": "java.lang.String",
            "expression": "JsonElement eCurrentCommercialOffer = COMMERCIAL_OFFER_LifeTime.get(\"currentCommercialOffer\");\r\n    if( eCurrentCommercialOffer != null )\r\n    {\r\n        return eCurrentCommercialOffer.getAsString();\r\n    }\r\nreturn BILLING_PRODUCT_LifeTime;",
            "status": "InActive",
            "creationDate": "1558418647315",
            "lastUpateDate": "1566276861937",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": null,
            "indicatorType": "Indicator",
            "parameters": "[\"COMMERCIAL_OFFER_LifeTime\",\"BILLING_PRODUCT_LifeTime\"]",
            "brickTerm": "Billing account ID of the customer",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "BILLING_PRODUCT_LifeTime"
          },
          {
            "id": "CHANNEL_OF_PREFERENCE",
            "description": "Channel of preference",
            "serviceType": "PROFILE",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "Session",
            "expressionType": "java.lang.String",
            "expression": "CHANNEL_OF_PREFERENCE = PREFERRED_CHANNEL_LifeTime",
            "status": "Active",
            "creationDate": "1558072101240",
            "lastUpateDate": "1565681285366",
            "owner": "deepti",
            "scriptOrExpression": "expression",
            "alternateNames": "Channel_of_preference",
            "indicatorType": "Indicator",
            "parameters": "[\"CHANNEL_OF_PREFERENCE\",\"PREFERRED_CHANNEL_LifeTime\"]",
            "brickTerm": "Channel of preference",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "CHANNEL_OF_PREFERENCE"
          },
          {
            "id": "CREDIT_SERIES_LifeTime",
            "description": "Credit series \r\nPrevious credit value\r\nLatest credit value\t\t\t\r\nLatest credit method\r\nLatest credit expiry date\r\nCredit expiry updation date\r\nBar update flag",
            "serviceType": "TimeSeries",
            "serviceSubType": "ALL",
            "measurementType": "Count",
            "frequency": "LifeTime",
            "expressionType": "com.google.gson.JsonObject",
            "expression": "if (RECORD_TYPE.equals(\"CREDIT\")) {\r\nString sDayStamp = new Long(RECORD_DAYSTAMP).toString();\r\nJsonElement elatestCreditActivityDate = CREDIT_SERIES_LifeTime.get(\"latestCreditActivityDate\");\r\nif ((elatestCreditActivityDate == null || elatestCreditActivityDate.getAsLong() < RECORD_TIMESTAMP) && TRANSACTION_VALUE > 0 ){\r\nCREDIT_SERIES_LifeTime.addProperty(\"latestCreditActivityDate\", RECORD_TIMESTAMP);\r\ndouble prevCreditVal = 0;\r\nJsonElement jprevCredit = CREDIT_SERIES_LifeTime.get(\"latestCreditValue\");\r\nif (jprevCredit != null)\r\nprevCreditVal = jprevCredit.getAsDouble();\r\nCREDIT_SERIES_LifeTime.addProperty(\"previousCreditValue\", prevCreditVal);\r\nCREDIT_SERIES_LifeTime.addProperty(\"latestCreditValue\", TRANSACTION_VALUE);\r\nCREDIT_SERIES_LifeTime.addProperty(\"latestCreditMethod\", CREDIT_METHOD);\r\n}\r\n\r\nJsonElement elatestCreditExpiryDate = CREDIT_SERIES_LifeTime.get(\"latestCreditExpiryDate\");\r\nJsonElement eCreditExpiryUpdationDate = CREDIT_SERIES_LifeTime.get(\"creditExpiryUpdationDate\");\r\nif ( CREDIT_EXPIRY_DATE > 0 && ( eCreditExpiryUpdationDate == null || eCreditExpiryUpdationDate.getAsLong() < RECORD_TIMESTAMP )){\r\n//if ( elatestCreditExpiryDate == null / CR 61 62 change|| CREDIT_EXPIRY_DATE > elatestCreditExpiryDate.getAsLong() /){\r\nCREDIT_SERIES_LifeTime.addProperty(\"latestCreditExpiryDate\", CREDIT_EXPIRY_DATE ) ;\r\nCREDIT_SERIES_LifeTime.addProperty(\"creditExpiryUpdationDate\", RECORD_TIMESTAMP ) ;\r\nCREDIT_SERIES_LifeTime.addProperty(\"barUpdateFlag\", \"Y\" ) ;\r\n\r\n//}\r\n}\r\nif ( TRANSACTION_VALUE > 0 )\r\n{\r\nJsonArray array = new JsonArray();\r\narray.add(new JsonPrimitive(TRANSACTION_VALUE));\r\n\r\nJsonElement eSeries = CREDIT_SERIES_LifeTime.get(sDayStamp);\r\nif (eSeries == null) {\r\n\r\nJsonElement ekeys = CREDIT_SERIES_LifeTime.get(\"keys\");\r\nJsonArray newKeyArr ;\r\nif( ekeys == null )\r\nnewKeyArr = insertIntoKeyArray( new JsonArray(), RECORD_DAYSTAMP );\r\nelse\r\nnewKeyArr = insertIntoKeyArray( ekeys.getAsJsonArray(), RECORD_DAYSTAMP );\r\nCREDIT_SERIES_LifeTime.add( \"keys\", newKeyArr );\r\n\r\nJsonArray existingArray = new JsonArray();\r\nexistingArray.add(array);\r\nCREDIT_SERIES_LifeTime.add(sDayStamp, existingArray);\r\n\r\nint noOfEntries = newKeyArr.size();\r\nif ( noOfEntries > 36 ) {\r\nString elementToRemove = newKeyArr.remove(0).getAsString();\r\nCREDIT_SERIES_LifeTime.remove(elementToRemove);\r\n}\r\n} else {\r\neSeries.getAsJsonArray().add(array);\r\n}\r\n}\r\n}\r\nelse if (RECORD_TYPE.equals(\"OCS_ACTIVATION\") && CREDIT_EXPIRY_DATE > 0 ) {\r\nJsonElement eBarUpdateFlag = CREDIT_SERIES_LifeTime.get(\"barUpdateFlag\"); \r\nif ( eBarUpdateFlag == null || ! eBarUpdateFlag.getAsString().equals(\"Y\") )\r\n{\r\nCREDIT_SERIES_LifeTime.addProperty(\"latestCreditExpiryDate\", CREDIT_EXPIRY_DATE ) ;\r\nCREDIT_SERIES_LifeTime.addProperty(\"creditExpiryUpdationDate\", RECORD_TIMESTAMP );\r\nCREDIT_SERIES_LifeTime.addProperty(\"barUpdateFlag\", \"Y\" ) ;\r\n}\r\n}\r\n\r\n//Apollo specific EVENT_TYPE\r\n/*else if (RECORD_TYPE.equals(\"LDR\") && EVENT_TYPE.equals(\"504\") && INACTIVITY_START_DATE != 0 ) {\r\nJsonElement eCreditExpiryUpdationDate = CREDIT_SERIES_LifeTime.get(\"creditExpiryUpdationDate\"); \r\nif ( eCreditExpiryUpdationDate == null || RECORD_TIMESTAMP > eCreditExpiryUpdationDate.getAsLong() )\r\n{\r\nCREDIT_SERIES_LifeTime.addProperty(\"latestCreditExpiryDate\", INACTIVITY_START_DATE ) ;\r\nCREDIT_SERIES_LifeTime.addProperty(\"creditExpiryUpdationDate\", RECORD_TIMESTAMP );\r\n}\r\n}*/\r\nreturn CREDIT_SERIES_LifeTime;",
            "status": "Active",
            "creationDate": "1566192917701",
            "lastUpateDate": "1566360966741",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": "Credit_series",
            "indicatorType": "Indicator",
            "parameters": "[\"RECORD_TYPE\",\"RECORD_DAYSTAMP\",\"CREDIT_SERIES_LifeTime\",\"RECORD_TIMESTAMP\",\"TRANSACTION_VALUE\",\"CREDIT_METHOD\",\"CREDIT_EXPIRY_DATE\",\"SIFTMATH\"]",
            "brickTerm": "Credit series, Previous credit value, Latest credit value, Latest credit method, Latest credit expiry date, Credit expiry updation date, Bar update flag",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "CREDIT_SERIES_LifeTime"
          },
          {
            "id": "DEVICE_MODEL",
            "description": "Device model of the customer",
            "serviceType": "PROFILE",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "Session",
            "expressionType": "java.lang.String",
            "expression": "return \"-99\";",
            "status": "Active",
            "creationDate": "1557984796363",
            "lastUpateDate": "1565682062211",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": null,
            "indicatorType": "Indicator",
            "parameters": "[]",
            "brickTerm": "Device model of the customer",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "DEVICE_MODEL"
          },
          {
            "id": "DAYS_TO_CREDIT_EXPIRY_LifeTime",
            "description": "Days to credit expiry",
            "serviceType": "NameValue",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "double",
            "expression": "JsonElement eCreditExpiryDate = CREDIT_SERIES_LifeTime.get(\"latestCreditExpiryDate\");\r\nif(eCreditExpiryDate != null){\r\ndouble expDayCount = getCreditExpiryDaysCount ();\r\n\r\nif( expDayCount  >=0.0  ){ \r\nreturn expDayCount;\r\n}\r\n}\r\nreturn -1;",
            "status": "Active",
            "creationDate": "1556592060793",
            "lastUpateDate": "1566360985674",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": "Days_to_credit_expiry",
            "indicatorType": "Indicator",
            "parameters": "[\"CREDIT_SERIES_LifeTime\",\"SIFTMATH\"]",
            "brickTerm": "Days to credit expiry",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "DAYS_TO_CREDIT_EXPIRY_LifeTime"
          },
          {
            "id": "FULFILLMENT_COUNT_LifeTime",
            "description": "Count of Fulfilment",
            "serviceType": "ACTIVITY",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "com.google.gson.JsonObject",
            "expression": "/*if ( SIFT_INTERNAL_RECORD_TYPE.equals(\"FulfillmentCount\") )\r\n\t\t{\r\n\t\t\tif ( FULFILLMENT_COUNT_LifeTime.has( \"TotalCount\" ) )\r\n\t\t\t\tFULFILLMENT_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( FULFILLMENT_COUNT_LifeTime.get( \"TotalCount\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\telse\r\n\t\t\t\tFULFILLMENT_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive(COUNT_FACTOR) );\r\n\r\n\t\t\tif ( FULFILLMENT_COUNT_LifeTime.has( CHANNEL ) )\r\n\t\t\t\tFULFILLMENT_COUNT_LifeTime.add( CHANNEL, new JsonPrimitive( FULFILLMENT_COUNT_LifeTime.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\telse\r\n\t\t\t\tFULFILLMENT_COUNT_LifeTime.add( CHANNEL , new JsonPrimitive(COUNT_FACTOR));\r\n\r\n\t\t\tString[] catArray = null;\r\n\t\t\tif( OFFER_CATEGORY == null || OFFER_CATEGORY.equals( \"\" ) ) {\r\n\t\t\t\t\tcom.google.gson.JsonElement offerCatEle = getSiftwareAttribute( \"Offer\", OFFER_ID, \"category\" );\r\n\t\t\t\t\tif( offerCatEle == null || offerCatEle.isJsonNull() ) {\r\n\t\t\t\t\t\tcatArray = new String[ 1 ];\r\n\t\t\t\t\t\tcatArray[ 0 ] = \"GENERIC\";\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tcatArray = offerCatEle.getAsString().split( \",\" );\r\n\t\t\t\t} else\r\n\t\t\t\t\tcatArray = OFFER_CATEGORY.split( \",\" );\r\n\t\t\tfor( int i=0; i< catArray.length; i++)\r\n\t\t\t{\r\n\t\t\t\tJsonObject eCatObj = null;\r\n\t\t\t\tif( FULFILLMENT_COUNT_LifeTime.has( catArray[i] ) )\r\n\t\t\t\t\teCatObj = FULFILLMENT_COUNT_LifeTime.get( catArray[i] ).getAsJsonObject();\r\n\t\t\t\telse\r\n\t\t\t\t\teCatObj = new JsonObject();\r\n\r\n\t\t\t\tif ( eCatObj.has( \"count\" ) )\r\n\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( eCatObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR) );\r\n\t\t\t\telse\r\n\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive(COUNT_FACTOR) );\r\n\r\n\t\t\t\tif ( eCatObj.has( CHANNEL ) )\r\n\t\t\t\t\teCatObj.add( CHANNEL, new JsonPrimitive( eCatObj.get( CHANNEL ).getAsDouble() + COUNT_FACTOR) );\r\n\t\t\t\telse\r\n\t\t\t\t\teCatObj.add( CHANNEL, new JsonPrimitive(COUNT_FACTOR) );\r\n\r\n\t\t\t\tJsonObject eOfferObj = null;\r\n\t\t\t\tif( eCatObj.has( OFFER_ID ) )\r\n\t\t\t\t\teOfferObj = eCatObj.get( OFFER_ID ).getAsJsonObject();\r\n\t\t\t\telse\r\n\t\t\t\t\teOfferObj = new JsonObject();\r\n\r\n\t\t\t\tif ( eOfferObj.has( \"count\" ) )\r\n\t\t\t\t\teOfferObj.add( \"count\", new JsonPrimitive( eOfferObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR) );\r\n\t\t\t\telse\r\n\t\t\t\t\teOfferObj.add( \"count\", new JsonPrimitive(COUNT_FACTOR) );\r\n\r\n\t\t\t\tif ( eOfferObj.has( CHANNEL ) )\r\n\t\t\t\t\teOfferObj.add( CHANNEL, new JsonPrimitive( eOfferObj.get( CHANNEL ).getAsDouble() + COUNT_FACTOR) );\r\n\t\t\t\telse\r\n\t\t\t\t\teOfferObj.add( CHANNEL, new JsonPrimitive(COUNT_FACTOR) );\r\n\r\n\r\n\t\t\t\tJsonArray offDateSeries = null;\r\n\t\t\t\tif( eOfferObj.has( \"date_series\" ) )\r\n\t\t\t\t\toffDateSeries = eOfferObj.get( \"date_series\" ).getAsJsonArray();\r\n\t\t\t\telse\r\n\t\t\t\t\toffDateSeries = new JsonArray();\r\n\t\t\t\t\t\r\n\t\t\t\tJsonArray offChannelDateSeries = null;\r\n\t\t\t\tif( eOfferObj.has( CHANNEL + \"_date_series\" ) )\r\n\t\t\t\t\toffChannelDateSeries = eOfferObj.get( CHANNEL + \"_date_series\" ).getAsJsonArray();\r\n\t\t\t\telse\r\n\t\t\t\t\toffChannelDateSeries = new JsonArray();\r\n\t\t\t\t\r\n\t\t\t\tif ( TRANSACTION_STATUS.equals(\"SUCCESS\") )\r\n\t\t\t\t{\r\n\t\t\t\t\toffDateSeries.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\toffChannelDateSeries.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\teOfferObj.add( \"date_series\", offDateSeries );\r\n\t\t\t\t\teOfferObj.add( CHANNEL + \"_date_series\", offChannelDateSeries );\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\toffDateSeries.remove( offDateSeries.size() - 1 );\r\n\t\t\t\t\toffChannelDateSeries.remove( offChannelDateSeries.size() - 1 );\r\n\t\t\t\t}\r\n\t\t\t\teCatObj.add( OFFER_ID, eOfferObj);\r\n\t\t\t\tFULFILLMENT_COUNT_LifeTime.add( catArray[i], eCatObj);\r\n\t\t\t}\r\n\t\t}     \r\n*/\r\n\t\treturn FULFILLMENT_COUNT_LifeTime;",
            "status": "Active",
            "creationDate": "1474853856584",
            "lastUpateDate": "1565161211543",
            "owner": "jaideep",
            "scriptOrExpression": "expression",
            "alternateNames": "FULFILLMENT_COUNT_LifeTime",
            "indicatorType": "Indicator",
            "parameters": "[\"FULFILLMENT_COUNT_LifeTime\"]",
            "brickTerm": "Count of Fulfilment",
            "category": "",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "FULFILLMENT_COUNT_LifeTime"
          },
          {
            "id": "LAST_RECHARGE_AMOUNT",
            "description": "Latest amount recharged",
            "serviceType": "PROFILE",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "Session",
            "expressionType": "double",
            "expression": "LAST_RECHARGE_AMOUNT = LAST_RECHARGE_AMOUNT_LifeTime",
            "status": "Active",
            "creationDate": "1557447517414",
            "lastUpateDate": "1565681631720",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": null,
            "indicatorType": "Indicator",
            "parameters": "[\"LAST_RECHARGE_AMOUNT\",\"LAST_RECHARGE_AMOUNT_LifeTime\"]",
            "brickTerm": "Latest amount recharged",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "LAST_RECHARGE_AMOUNT"
          },
          {
            "id": "LAST_RECHARGE_AMOUNT_LifeTime",
            "description": "Latest amount recharged",
            "serviceType": "NameValue",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "double",
            "expression": "JsonElement eCreditSeries = CREDIT_SERIES_LifeTime;\r\nif(eCreditSeries != null  ){\r\ndouble  creditValue= getLatestCreditValue() ;\r\n return creditValue;\r\n}\r\nreturn -1;",
            "status": "Active",
            "creationDate": "1556862192663",
            "lastUpateDate": "1566361166931",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": "Last_recharge_amount",
            "indicatorType": "Indicator",
            "parameters": "[\"CREDIT_SERIES_LifeTime\",\"SIFTMATH\"]",
            "brickTerm": "Latest amount recharged",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "LAST_RECHARGE_AMOUNT_LifeTime"
          },
          {
            "id": "LATEST_BALANCE",
            "description": "Current balance",
            "serviceType": "ACTIVITY",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "Session",
            "expressionType": "double",
            "expression": "getLatestBalance()",
            "status": "Active",
            "creationDate": "1557447837649",
            "lastUpateDate": "1565682111867",
            "owner": "piyali",
            "scriptOrExpression": "expression",
            "alternateNames": null,
            "indicatorType": "Indicator",
            "parameters": "[\"SIFTMATH\"]",
            "brickTerm": "Current balance",
            "category": "ALL",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "LATEST_BALANCE"
          },
          {
            "id": "OFFER_COUNT_LifeTime",
            "description": "Offer count",
            "serviceType": "ACTIVITY",
            "serviceSubType": "ALL",
            "measurementType": "Value",
            "frequency": "LifeTime",
            "expressionType": "com.google.gson.JsonObject",
            "expression": "if ( SIFT_INTERNAL_RECORD_TYPE.equals(\"ContactCount\") ){\r\n\t\t\tif( TRANSACTION_STATUS.equals( \"SUCCESS\" ) )\r\n\t\t\t{\r\n\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\tif( OFFER_COUNT_LifeTime.has( \"CONTACT_SERIES\" ) ) {\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.get( \"CONTACT_SERIES\" ).getAsJsonArray().add( new JsonPrimitive( CONTACT_TIME ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tJsonArray jArray = new JsonArray();\r\n\t\t\t\t\t\tjArray.add( new JsonPrimitive( CONTACT_TIME ) );\t\t   \r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"CONTACT_SERIES\", jArray);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( \"TotalCount\" ) )\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( OFFER_COUNT_LifeTime.get( \"TotalCount\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( CHANNEL ) )\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL, new JsonPrimitive( OFFER_COUNT_LifeTime.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL , new JsonPrimitive( COUNT_FACTOR ));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tJsonArray channelDateSer = null;\r\n\t\t\t\t\tif( OFFER_COUNT_LifeTime.has( CHANNEL + \"_dateSeries\" ) )\r\n\t\t\t\t\t\tchannelDateSer = OFFER_COUNT_LifeTime.get( CHANNEL + \"_dateSeries\" ).getAsJsonArray();\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tchannelDateSer = new JsonArray();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tchannelDateSer.add( new JsonPrimitive( CONTACT_TIME ) );\r\n\t\t\t\t\tif( channelDateSer.size() > 10 )\r\n\t\t\t\t\t\tchannelDateSer.remove( 0 );\r\n\t\t\t\t\t\r\n\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL + \"_dateSeries\", channelDateSer );\r\n\t\t\t\t}\r\n\t\t\t\tString[] catArray = null;\r\n\t\t\t\tif( OFFER_CATEGORY == null || OFFER_CATEGORY.equals( \"\" ) ) {\r\n\t\t\t\t\tcom.google.gson.JsonElement offerCatEle = getSiftwareAttribute( \"Offer\", OFFER_ID, \"category\" );\r\n\t\t\t\t\tif( offerCatEle == null || offerCatEle.isJsonNull() ) {\r\n\t\t\t\t\t\tcatArray = new String[ 1 ];\r\n\t\t\t\t\t\tcatArray[ 0 ] = \"GENERIC\";\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tcatArray = offerCatEle.getAsString().split( \",\" );\r\n\t\t\t\t} else\r\n\t\t\t\t\tcatArray = OFFER_CATEGORY.split( \",\" );\r\n\r\n\t\t\t\tfor( int i = 0; i < catArray.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( catArray[i] ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tJsonObject eCatObj = OFFER_COUNT_LifeTime.get( catArray[i] ).getAsJsonObject();\r\n\t\t\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\t\t\tif( eCatObj.has( \"count\" ) )\r\n\t\t\t\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( eCatObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tif ( eCatObj.has( CHANNEL ) )\r\n\t\t\t\t\t\t\t\teCatObj.add( CHANNEL, new JsonPrimitive( eCatObj.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teCatObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tif( eCatObj.has( \"date_series\" ) )\r\n\t\t\t\t\t\t\t\teCatObj.get( \"date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tJsonArray catDateSeriesArr = new JsonArray();\r\n\t\t\t\t\t\t\t\tcatDateSeriesArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teCatObj.add( \"date_series\", catDateSeriesArr);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( eCatObj.has( CHANNEL + \"_date_series\" ) )\r\n\t\t\t\t\t\t\t\teCatObj.get( CHANNEL + \"_date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tJsonArray catChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\t\tcatChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teCatObj.add( CHANNEL + \"_date_series\", catChannelContactArr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( eCatObj.has( OFFER_ID ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJsonObject eOfferObj = eCatObj.get( OFFER_ID ).getAsJsonObject();\r\n\t\t\t\t\t\t\teOfferObj.add( \"count\", new JsonPrimitive( eOfferObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tif ( eOfferObj.has( CHANNEL ) )\r\n\t\t\t\t\t\t\t\teOfferObj.add( CHANNEL, new JsonPrimitive( eOfferObj.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teOfferObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonElement eOfferDateSeries = eOfferObj.get( \"date_series\" );\r\n\t\t\t\t\t\t\tif( eOfferDateSeries == null || eOfferDateSeries.isJsonNull() ){\r\n\t\t\t\t\t\t\t\tJsonArray offDateArr = new JsonArray();\r\n\t\t\t\t\t\t\t\toffDateArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teOfferObj.add( \"date_series\", offDateArr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\t\r\n\t\t\t\t\t\t\t\teOfferObj.get( \"date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\r\n\t\t\t\t\t\t\tif ( eOfferObj.has( CHANNEL + \"_date_series\" ) )\r\n\t\t\t\t\t\t\t\teOfferObj.get( CHANNEL + \"_date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tJsonArray catChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\t\tcatChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teOfferObj.add( CHANNEL + \"_date_series\", catChannelContactArr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJsonObject offerObj = new JsonObject();\r\n\t\t\t\t\t\t\tofferObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\tofferObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray offContactArr = new JsonArray();\r\n\t\t\t\t\t\t\toffContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tofferObj.add( \"date_series\", offContactArr);\r\n\r\n\t\t\t\t\t\t\tJsonArray offChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\toffChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tofferObj.add( CHANNEL + \"_date_series\", offChannelContactArr);\r\n\r\n\t\t\t\t\t\t\teCatObj.add( OFFER_ID, offerObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( catArray[i], eCatObj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tJsonObject newCatObj = new JsonObject();\r\n\t\t\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\t\t\tnewCatObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\tnewCatObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray catContactArr = new JsonArray();\r\n\t\t\t\t\t\t\tcatContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tnewCatObj.add( \"date_series\", catContactArr);\r\n\r\n\t\t\t\t\t\t\tJsonArray catChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\tcatChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tnewCatObj.add( CHANNEL + \"_date_series\", catChannelContactArr);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tJsonObject offerObj = new JsonObject();\r\n\t\t\t\t\t\tofferObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\t\t\t\t\t\tofferObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\tJsonArray offContactArr = new JsonArray();\r\n\t\t\t\t\t\toffContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\tofferObj.add( \"date_series\", offContactArr);\r\n\r\n\t\t\t\t\t\tJsonArray offChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\toffChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\tofferObj.add( CHANNEL + \"_date_series\", offChannelContactArr);\r\n\r\n\t\t\t\t\t\tnewCatObj.add( OFFER_ID, offerObj);\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( catArray[i], newCatObj);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if( TRANSACTION_STATUS.equals( \"FAILED\" ) ){\r\n\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\tJsonArray aContactSeries = OFFER_COUNT_LifeTime.get( \"CONTACT_SERIES\" ).getAsJsonArray();\r\n\t\t\t\t\t\tif( aContactSeries.size() > 0 )\r\n\t\t\t\t\t\t\taContactSeries.remove( aContactSeries.size() - 1 );\r\n\t\t\t\t\tif( aContactSeries.size() == 0 )\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.remove( \"CONTACT_SERIES\" );\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif( OFFER_COUNT_LifeTime.has( CHANNEL + \"_dateSeries\" ) ) {\r\n\t\t\t\t\t\tJsonArray channelDateSer = OFFER_COUNT_LifeTime.get( CHANNEL + \"_dateSeries\" ).getAsJsonArray();\r\n\t\t\t\t\t\tchannelDateSer.remove( channelDateSer.size() - 1 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( OFFER_COUNT_LifeTime.get( \"TotalCount\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL_TYPE, new JsonPrimitive( OFFER_COUNT_LifeTime.get( CHANNEL_TYPE ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tString[] offerCategories = null;\r\n\t\t\t\tif( OFFER_CATEGORY == null || OFFER_CATEGORY.equals( \"\" ) ) {\r\n\t\t\t\t\tcom.google.gson.JsonElement offerCatEle = getSiftwareAttribute( \"Offer\", OFFER_ID, \"category\" );\r\n\t\t\t\t\tif( offerCatEle == null || offerCatEle.isJsonNull() ) {\r\n\t\t\t\t\t\tofferCategories = new String[ 1 ];\r\n\t\t\t\t\t\tofferCategories[ 0 ] = \"GENERIC\";\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tofferCategories = offerCatEle.getAsString().split( \",\" );\r\n\t\t\t\t} else\r\n\t\t\t\t\tofferCategories = OFFER_CATEGORY.split( \",\" );\r\n\r\n\t\t\t\tfor( int i = 0; i < offerCategories.length; i ++ ){\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( offerCategories[ i ] ) ){\r\n\t\t\t\t\t\tJsonObject eCatObj = OFFER_COUNT_LifeTime.get( offerCategories[ i ] ).getAsJsonObject();\r\n\t\t\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( eCatObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\teCatObj.add( CHANNEL_TYPE, new JsonPrimitive( eCatObj.get( CHANNEL_TYPE ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray aDateSeries = eCatObj.get( \"date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\tfor ( int j = aDateSeries.size() - 1; j >= 0; j -- ){\r\n\t\t\t\t\t\t\t\tif( CONTACT_TIME == aDateSeries.get( j ).getAsLong()  ){\r\n\t\t\t\t\t\t\t\t\taDateSeries.remove( j );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( aDateSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teCatObj.remove( \"date_series\" );\r\n\r\n\t\t\t\t\t\t\tJsonArray aChannelDateSeries = eCatObj.get( CHANNEL_TYPE + \"_date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\tfor (int j = aChannelDateSeries.size() - 1; j >= 0; j -- ){\r\n\t\t\t\t\t\t\t\tif( CONTACT_TIME == aChannelDateSeries.get( j ).getAsLong()  ){\r\n\t\t\t\t\t\t\t\t\taChannelDateSeries.remove( j );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( aChannelDateSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teCatObj.remove( CHANNEL_TYPE + \"_date_series\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( eCatObj.has( OFFER_ID ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJsonObject eOfferObj = eCatObj.get( OFFER_ID ).getAsJsonObject();\r\n\t\t\t\t\t\t\teOfferObj.add( \"count\", new JsonPrimitive( eOfferObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\teOfferObj.add( CHANNEL_TYPE, new JsonPrimitive( eOfferObj.get( CHANNEL_TYPE ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray aOfferDateSeries = eOfferObj.get( \"date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\taOfferDateSeries.remove( aOfferDateSeries.size() - 1 );\r\n\r\n\t\t\t\t\t\t\tif( aOfferDateSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teOfferObj.remove( \"date_series\" );\r\n\r\n\t\t\t\t\t\t\tJsonArray aOfferChanelSeries = eOfferObj.get( CHANNEL_TYPE + \"_date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\taOfferChanelSeries.remove( aOfferChanelSeries.size() - 1 );\r\n\t\t\t\t\t\t\tif( aOfferChanelSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teOfferObj.remove( CHANNEL_TYPE + \"_date_series\" );\r\n\r\n\t\t\t\t\t\t\teCatObj.add( OFFER_ID, eOfferObj);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( offerCategories[ i ], eCatObj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( SIFT_INTERNAL_RECORD_TYPE.equals(\"FulfillmentCount\") && OFFER_TYPE.equals( \"UnConditional\" ) ){\r\n\t\t\tif( TRANSACTION_STATUS.equals( \"SUCCESS\" ) )\r\n\t\t\t{\r\n\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\tif( OFFER_COUNT_LifeTime.has( \"CONTACT_SERIES\" ) ) {\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.get( \"CONTACT_SERIES\" ).getAsJsonArray().add( new JsonPrimitive( CONTACT_TIME ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tJsonArray jArray = new JsonArray();\r\n\t\t\t\t\t\tjArray.add( new JsonPrimitive( CONTACT_TIME ) );\t\t   \r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"CONTACT_SERIES\", jArray);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( \"TotalCount\" ) )\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( OFFER_COUNT_LifeTime.get( \"TotalCount\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( CHANNEL ) )\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL, new JsonPrimitive( OFFER_COUNT_LifeTime.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL , new JsonPrimitive( COUNT_FACTOR ));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tString[] catArray = null;\r\n\t\t\t\tif( OFFER_CATEGORY == null || OFFER_CATEGORY.equals( \"\" ) ) {\r\n\t\t\t\t\tcom.google.gson.JsonElement offerCatEle = getSiftwareAttribute( \"Offer\", OFFER_ID, \"category\" );\r\n\t\t\t\t\tif( offerCatEle == null || offerCatEle.isJsonNull() ) {\r\n\t\t\t\t\t\tcatArray = new String[ 1 ];\r\n\t\t\t\t\t\tcatArray[ 0 ] = \"GENERIC\";\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tcatArray = offerCatEle.getAsString().split( \",\" );\r\n\t\t\t\t} else\r\n\t\t\t\t\tcatArray = OFFER_CATEGORY.split( \",\" );\r\n\r\n\t\t\t\tfor( int i = 0; i < catArray.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( catArray[i] ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tJsonObject eCatObj = OFFER_COUNT_LifeTime.get( catArray[i] ).getAsJsonObject();\r\n\t\t\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\t\t\tif( eCatObj.has( \"count\" ) )\r\n\t\t\t\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( eCatObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tif ( eCatObj.has( CHANNEL ) )\r\n\t\t\t\t\t\t\t\teCatObj.add( CHANNEL, new JsonPrimitive( eCatObj.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teCatObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tif( eCatObj.has( \"date_series\" ) )\r\n\t\t\t\t\t\t\t\teCatObj.get( \"date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tJsonArray catDateSeriesArr = new JsonArray();\r\n\t\t\t\t\t\t\t\tcatDateSeriesArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teCatObj.add( \"date_series\", catDateSeriesArr);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( eCatObj.has( CHANNEL + \"_date_series\" ) )\r\n\t\t\t\t\t\t\t\teCatObj.get( CHANNEL + \"_date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tJsonArray catChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\t\tcatChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teCatObj.add( CHANNEL + \"_date_series\", catChannelContactArr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( eCatObj.has( OFFER_ID ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJsonObject eOfferObj = eCatObj.get( OFFER_ID ).getAsJsonObject();\r\n\t\t\t\t\t\t\teOfferObj.add( \"count\", new JsonPrimitive( eOfferObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tif ( eOfferObj.has( CHANNEL ) )\r\n\t\t\t\t\t\t\t\teOfferObj.add( CHANNEL, new JsonPrimitive( eOfferObj.get( CHANNEL ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teOfferObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonElement eOfferDateSeries = eOfferObj.get( \"date_series\" );\r\n\t\t\t\t\t\t\tif( eOfferDateSeries == null || eOfferDateSeries.isJsonNull() ){\r\n\t\t\t\t\t\t\t\tJsonArray offDateArr = new JsonArray();\r\n\t\t\t\t\t\t\t\toffDateArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teOfferObj.add( \"date_series\", offDateArr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\t\r\n\t\t\t\t\t\t\t\teOfferObj.get( \"date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\r\n\t\t\t\t\t\t\tif ( eOfferObj.has( CHANNEL + \"_date_series\" ) )\r\n\t\t\t\t\t\t\t\teOfferObj.get( CHANNEL + \"_date_series\" ).getAsJsonArray().add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tJsonArray catChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\t\tcatChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\t\teOfferObj.add( CHANNEL + \"_date_series\", catChannelContactArr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJsonObject offerObj = new JsonObject();\r\n\t\t\t\t\t\t\tofferObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\tofferObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray offContactArr = new JsonArray();\r\n\t\t\t\t\t\t\toffContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tofferObj.add( \"date_series\", offContactArr);\r\n\r\n\t\t\t\t\t\t\tJsonArray offChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\toffChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tofferObj.add( CHANNEL + \"_date_series\", offChannelContactArr);\r\n\r\n\t\t\t\t\t\t\teCatObj.add( OFFER_ID, offerObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( catArray[i], eCatObj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tJsonObject newCatObj = new JsonObject();\r\n\t\t\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\t\t\tnewCatObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\t\t\t\t\t\t\tnewCatObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray catContactArr = new JsonArray();\r\n\t\t\t\t\t\t\tcatContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tnewCatObj.add( \"date_series\", catContactArr);\r\n\r\n\t\t\t\t\t\t\tJsonArray catChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\t\tcatChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\t\tnewCatObj.add( CHANNEL + \"_date_series\", catChannelContactArr);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tJsonObject offerObj = new JsonObject();\r\n\t\t\t\t\t\tofferObj.add( \"count\", new JsonPrimitive( COUNT_FACTOR ) );\r\n\t\t\t\t\t\tofferObj.add( CHANNEL, new JsonPrimitive( COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\tJsonArray offContactArr = new JsonArray();\r\n\t\t\t\t\t\toffContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\tofferObj.add( \"date_series\", offContactArr);\r\n\r\n\t\t\t\t\t\tJsonArray offChannelContactArr = new JsonArray();\r\n\t\t\t\t\t\toffChannelContactArr.add( new JsonPrimitive(CONTACT_TIME) );\r\n\t\t\t\t\t\tofferObj.add( CHANNEL + \"_date_series\", offChannelContactArr);\r\n\r\n\t\t\t\t\t\tnewCatObj.add( OFFER_ID, offerObj);\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( catArray[i], newCatObj);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if( TRANSACTION_STATUS.equals( \"FAILED\" ) ){\r\n\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\tJsonArray aContactSeries = OFFER_COUNT_LifeTime.get( \"CONTACT_SERIES\" ).getAsJsonArray();\r\n\t\t\t\t\tif( aContactSeries.size() > 0 )\r\n\t\t\t\t\t\t\taContactSeries.remove( aContactSeries.size() - 1 );\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif( aContactSeries.size() == 0 )\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.remove( \"CONTACT_SERIES\" );\r\n\r\n\t\t\t\t\tOFFER_COUNT_LifeTime.add( \"TotalCount\", new JsonPrimitive( OFFER_COUNT_LifeTime.get( \"TotalCount\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t\tOFFER_COUNT_LifeTime.add( CHANNEL_TYPE, new JsonPrimitive( OFFER_COUNT_LifeTime.get( CHANNEL_TYPE ).getAsDouble() + COUNT_FACTOR ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tString[] offerCategories = null;\r\n\t\t\t\tif( OFFER_CATEGORY == null || OFFER_CATEGORY.equals( \"\" ) ) {\r\n\t\t\t\t\tcom.google.gson.JsonElement offerCatEle = getSiftwareAttribute( \"Offer\", OFFER_ID, \"category\" );\r\n\t\t\t\t\tif( offerCatEle == null || offerCatEle.isJsonNull() ) {\r\n\t\t\t\t\t\tofferCategories = new String[ 1 ];\r\n\t\t\t\t\t\tofferCategories[ 0 ] = \"GENERIC\";\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tofferCategories = offerCatEle.getAsString().split( \",\" );\r\n\t\t\t\t} else\r\n\t\t\t\t\tofferCategories = OFFER_CATEGORY.split( \",\" );\r\n\r\n\t\t\t\tfor( int i = 0; i < offerCategories.length; i ++ ){\r\n\t\t\t\t\tif ( OFFER_COUNT_LifeTime.has( offerCategories[ i ] ) ){\r\n\t\t\t\t\t\tJsonObject eCatObj = OFFER_COUNT_LifeTime.get( offerCategories[ i ] ).getAsJsonObject();\r\n\t\t\t\t\t\tif( COUNT_AS_CONTACT.equals(\"Y\") ){\r\n\t\t\t\t\t\t\teCatObj.add( \"count\", new JsonPrimitive( eCatObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\teCatObj.add( CHANNEL_TYPE, new JsonPrimitive( eCatObj.get( CHANNEL_TYPE ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray aDateSeries = eCatObj.get( \"date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\tfor ( int j = aDateSeries.size() - 1; j >= 0; j -- ){\r\n\t\t\t\t\t\t\t\tif( CONTACT_TIME == aDateSeries.get( j ).getAsLong()  ){\r\n\t\t\t\t\t\t\t\t\taDateSeries.remove( j );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( aDateSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teCatObj.remove( \"date_series\" );\r\n\r\n\t\t\t\t\t\t\tJsonArray aChannelDateSeries = eCatObj.get( CHANNEL_TYPE + \"_date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\tfor (int j = aChannelDateSeries.size() - 1; j >= 0; j -- ){\r\n\t\t\t\t\t\t\t\tif( CONTACT_TIME == aChannelDateSeries.get( j ).getAsLong()  ){\r\n\t\t\t\t\t\t\t\t\taChannelDateSeries.remove( j );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( aChannelDateSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teCatObj.remove( CHANNEL_TYPE + \"_date_series\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( eCatObj.has( OFFER_ID ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJsonObject eOfferObj = eCatObj.get( OFFER_ID ).getAsJsonObject();\r\n\t\t\t\t\t\t\teOfferObj.add( \"count\", new JsonPrimitive( eOfferObj.get( \"count\" ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\teOfferObj.add( CHANNEL_TYPE, new JsonPrimitive( eOfferObj.get( CHANNEL_TYPE ).getAsDouble() + COUNT_FACTOR ) );\r\n\r\n\t\t\t\t\t\t\tJsonArray aOfferDateSeries = eOfferObj.get( \"date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\taOfferDateSeries.remove( aOfferDateSeries.size() - 1 );\r\n\r\n\t\t\t\t\t\t\tif( aOfferDateSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teOfferObj.remove( \"date_series\" );\r\n\r\n\t\t\t\t\t\t\tJsonArray aOfferChanelSeries = eOfferObj.get( CHANNEL_TYPE + \"_date_series\" ).getAsJsonArray();\r\n\t\t\t\t\t\t\taOfferChanelSeries.remove( aOfferChanelSeries.size() - 1 );\r\n\t\t\t\t\t\t\tif( aOfferChanelSeries.size() == 0 )\r\n\t\t\t\t\t\t\t\teOfferObj.remove( CHANNEL_TYPE + \"_date_series\" );\r\n\r\n\t\t\t\t\t\t\teCatObj.add( OFFER_ID, eOfferObj);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tOFFER_COUNT_LifeTime.add( offerCategories[ i ], eCatObj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn OFFER_COUNT_LifeTime;",
            "status": "Active",
            "creationDate": "1474853882937",
            "lastUpateDate": "1565164552824",
            "owner": "rajeev",
            "scriptOrExpression": "expression",
            "alternateNames": "OFFER_COUNT_LifeTime",
            "indicatorType": "Indicator",
            "parameters": "[\"SIFT_INTERNAL_RECORD_TYPE\",\"TRANSACTION_STATUS\",\"COUNT_AS_CONTACT\",\"OFFER_COUNT_LifeTime\",\"CONTACT_TIME\",\"COUNT_FACTOR\",\"CHANNEL\",\"OFFER_CATEGORY\",\"SIFTMATH\",\"OFFER_ID\",\"CHANNEL_TYPE\",\"OFFER_TYPE\"]",
            "brickTerm": "Offer count",
            "category": "",
            "criteria": "",
            "audienceLevel": null,
            "field_name": "OFFER_COUNT_LifeTime"
          }
        ],
        "indicator_logic": [],
        "event_logic": {
          "condition": "AND",
          "rules": []
        },
        "function_expression": "",
        "expression_type": "Bricks Editor",
        "bricks_logic": {
          "expressionString": "(Latest amount recharged  greater than or equal to 30)",
          "expressionType": "bricks",
          "bricksUsed": [
            {
              "bt": "Latest amount recharged {NumericOperator} {NumericValue}",
              "jt": "$1 LAST_RECHARGE_AMOUNT_LifeTime $3 $4 $5 $7",
              "id": 1,
              "siftType": "Indicator"
            }
          ],
          "bricksLogic": {
            "condition": "AND",
            "rules": [
              {
                "siftType": "Indicator",
                "bt": "Latest amount recharged {NumericOperator} {NumericValue}",
                "jt": "$1 LAST_RECHARGE_AMOUNT_LifeTime $3 $4 $5 $7",
                "id": 1,
                "operand": "AND",
                "brickData": [
                  {
                    "name": "Latest amount recharged ",
                    "value": ""
                  },
                  {
                    "name": "NumericOperator",
                    "value": "greater than or equal to"
                  },
                  {
                    "name": "NumericValue",
                    "value": "30"
                  }
                ]
              }
            ]
          },
          "returnType": "boolean"
        },
        "createdAt": "2020-01-09T05:50:21Z",
        "updatedAt": "2020-01-09T23:25:54Z",
        "items": []
      },
      "configured_offer": {
        "cool_down_period": "0",
        "monitoring_event": "Event_Fulfilement_Offer",
        "offer_duration": "30",
        "offer_limit": "20",
        "offer_limit_per_customer": "20",
        "maxFulfilmentPerCustomer": "20"
      },
      "selected_offer": {
        "id": 1,
        "offer_name": "Offer_Monitoring_fufilment",
        "description": "Offer_Monitoring_fufilment",
        "status": "Active",
        "offer_type": "Monitoring Offer",
        "offer_priority": 1,
        "date_modified": "2020-01-09",
        "created_by": "Piyali",
        "offer_criteria": {
          "offer_limit": 20,
          "offer_duration": 30,
          "cool_down": 0,
          "monitoring_event": "Event_Fulfilement_Offer",
          "start_time": "",
          "end_time": "",
          "short_code": "",
          "keyword": "",
          "optin_channel": "",
          "optin_limit": 20,
          "fulfilment_limit": 20,
          "duration": "Days"
        },
        "domain_id": 1,
        "createdAt": "2020-01-09T05:50:47Z",
        "updatedAt": "2020-01-09T05:51:41Z"
      },
      "fulfilment_message": {
        "short_code": {
          "API_key": "SG",
          "code": "6598765432"
        },
        "selected_language": "English",
        "outbound_message": "Hi, Enjoy your 2GB Free bonus data.",
        "template_name": "SMS_Offer_Fulfilment_Notification"
      }
    },
    "activity_type": "OPOLO_OFFER",
    "next_activity": "WAITBYDURATION-1",
    "eventDefinitionKey": "Event-54d1e2ce-138c-0be6-956e-054014acfdee",
    "SIFTInstanceID": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526_4"
  },
  {
    "activity_id": "WAIT_06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "activity_name": "1 day",
    "activity_key": "WAITBYDURATION-1",
    "journey_id": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526",
    "journey_version": "4",
    "journey_name": "test all activities - girish",
    "journey_status": "activate",
    "last_upd_dt_time": "2020-02-03 09:25:26.243Z",
    "journey_key": "a3221d14-bf76-6f04-0f12-b3c98486b1e4",
    "originalDefinitionId": "4e766a11-90bc-4328-9a03-2a25e02b7123",
    "activity_data": {
      "waitEndDateAttributeDataBound": "",
      "waitDefinitionId": "ad3b30b3-e231-4d85-877b-7f199ec346e1",
      "waitForEventId": "",
      "executionMode": "{{Context.ExecutionMode}}",
      "startActivityKey": "{{Context.StartActivityKey}}",
      "waitQueueId": "{{Context.WaitQueueId}}"
    },
    "activity_type": "WAIT",
    "next_activity": "",
    "eventDefinitionKey": "Event-54d1e2ce-138c-0be6-956e-054014acfdee",
    "SIFTInstanceID": "06a2503a-40cd-4a4f-bdd3-e2aad8eba526_4"
  }
]
